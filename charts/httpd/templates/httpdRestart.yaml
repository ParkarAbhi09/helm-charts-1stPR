{{- if .Values.httpdRestart.enable }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "httpd.fullname" . }}-restart-deployment
  labels:
{{ include "httpd.labels" . | indent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "httpd.fullname" . }}-restart-deployment
  labels:
{{ include "httpd.labels" . | indent 4 }}
rules:
  - apiGroups: ["apps", "extensions"]
    resources: ["deployments"]
    resourceNames: [{{ include "httpd.fullname" . }}]
    verbs: ["get", "patch", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "httpd.fullname" . }}-restart-deployment
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "httpd.fullname" . }}-restart-deployment
subjects:
  - kind: ServiceAccount
    name: {{ include "httpd.fullname" . }}-restart-deployment
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "httpd.fullname" . }}-restart-deployment
  labels:
{{ include "httpd.labels" . | indent 4 }}
spec:
  concurrencyPolicy: Forbid
  schedule: {{ .Values.httpdRestart.cron }}
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 600
      template:
        spec:
          serviceAccountName: {{ include "httpd.fullname" . }}-restart-deployment
          restartPolicy: Never
          containers:
            - name: kubectl-httpdRestart
              image: "{{ .Values.httpdRestart.image.repository }}:{{ .Values.httpdRestart.image.tag }}"
              imagePullPolicy: {{ .Values.httpdRestart.image.pullPolicy }}
              command:
                - sh
                - -c
                - >-
                  kubectl rollout restart deployment/{{ include "httpd.fullname" . }} &&
                  kubectl rollout status deployment/{{ include "httpd.fullname" . }}
{{- end }}

suite: Tests with custom values
values:
  - values/custom.yaml
templates:
  - ingress.yaml
  - additional-ingresses.yaml
tests:
  - it: should create ingress with multiple hosts and multiple paths with full customized values
    template: ingress.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: metadata.name
          value: RELEASE-NAME-mirrorbits-parent
      - equal:
          path: metadata.annotations['app.kubernetes/whatever-with-chars']
          value: same/here-right
      - equal:
          path: spec.ingressClassName
          value: my-ingress-class
      - equal:
          path: spec.tls[0].secretName
          value: ingress-tls
      - equal:
          path: spec.tls[0].hosts[1]
          value: fallback.company.org
      - equal:
          path: spec.rules[0].host
          value: company.org
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /.*[.](deb|hpi|war|rpm|msi|pkg|sha256|md5sum|zip|gz|pdf|json|svg|sh|jpeg|ico|png|html)$
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: Prefix
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: RELEASE-NAME-httpd
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 8080
      - equal:
          path: spec.rules[0].http.paths[1].path
          value: /
      - equal:
          path: spec.rules[0].http.paths[1].pathType
          value: ImplementationSpecific
      - equal:
          path: spec.rules[0].http.paths[1].backend.service.name
          value: RELEASE-NAME-mirrorbits
      - equal:
          path: spec.rules[0].http.paths[1].backend.service.port.number
          value: 7777
      - equal:
          path: spec.rules[1].host
          value: fallback.company.org
      - equal:
          path: spec.rules[1].http.paths[0].path
          value: /
      - notExists:
          path: spec.rules[2]
  - it: should fail the ingress when a host's path does not have backendService
    template: ingress.yaml
    set:
      global:
        ingress:
          hosts:
            - host: company.org
              paths:
                - path: /
    asserts:
      - failedTemplate:
          errorMessage: "Required key: backendService for ingress.hosts[].paths[] objects must have the value 'httpd' or 'mirrorbits'."
  - it: should fail the ingress when a host's path has an unknown backendService
    template: ingress.yaml
    set:
      global:
        ingress:
          hosts:
            - host: company.org
              paths:
                - path: /
                  backendService: yipikai
    asserts:
      - failedTemplate:
          errorMessage: "Required key: backendService for ingress.hosts[].paths[] objects must have the value 'httpd' or 'mirrorbits'."
  - it: should fail the ingress when referencing httpd as backend but it is disabled
    template: ingress.yaml
    set:
      httpd:
        enabled: false
      global:
        ingress:
          hosts:
            - host: company.org
              paths:
                - path: /
                  backendService: httpd
    asserts:
      - failedTemplate:
          errorMessage: "Cannot use httpd as backend if it is disabled."
  - it: should fail the ingress when referencing mirrorbits as backend but it is disabled
    template: ingress.yaml
    set:
      mirrorbits:
        enabled: false
      global:
        ingress:
          hosts:
            - host: company.org
              paths:
                - path: /
                  backendService: mirrorbits
    asserts:
      - failedTemplate:
          errorMessage: "Cannot use mirrorbits as backend if it is disabled."
  - it: should create additional ingresses (from customized values)
    template: additional-ingresses.yaml
    asserts:
      - hasDocuments:
          count: 2
      - documentIndex: 0
        isKind:
          of: Ingress
      - documentIndex: 1
        isKind:
          of: Ingress
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-mirrorbits-parent-1
      - documentIndex: 1
        equal:
          path: metadata.name
          value: RELEASE-NAME-mirrorbits-parent-2
      - documentIndex: 0
        notExists:
          path: metadata.annotations
      - documentIndex: 1
        equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/rewrite-target"]
          value: "/$1$2/index.html"
      - documentIndex: 0
        notExists:
          path: spec.ingressClassName
      - documentIndex: 1
        equal:
          path: spec.ingressClassName
          value: bar
      - documentIndex: 0
        notExists:
          path: spec.tls
      - documentIndex: 1
        equal:
          path: spec.tls[0].secretName
          value: ubersecret
      - documentIndex: 1
        equal:
          path: spec.tls[0].hosts[0]
          value: company.org
      - documentIndex: 0
        equal:
          path: spec.rules[0].host
          value: localhost
      - documentIndex: 0
        equal:
          path: spec.rules[0].http.paths[0].path
          value: /
      - documentIndex: 0
        equal:
          path: spec.rules[0].http.paths[0].pathType
          value: Prefix
      - documentIndex: 0
        equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: RELEASE-NAME-httpd
      - documentIndex: 0
        equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 8080
      - documentIndex: 1
        equal:
          path: spec.rules[0].host
          value: company.org
      - documentIndex: 1
        equal:
          path: spec.rules[0].http.paths[0].path
          value: /(.*)(/|$)
      - documentIndex: 1
        equal:
          path: spec.rules[0].http.paths[0].pathType
          value: ImplementationSpecific
      - documentIndex: 1
        equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: RELEASE-NAME-mirrorbits
      - documentIndex: 1
        equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 7777

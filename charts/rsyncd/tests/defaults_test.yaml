suite: Test with no specified values (e.g. "helm template .")
tests:
  - it: should create the default deployment with expected attributes
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.replicas
          value: 1
      # Default pull policy is "IfNotPresent"
      - equal:
          path: spec.template.spec.containers[*].imagePullPolicy
          value: "IfNotPresent"
      # Check the expected "matched labels" to allow Service to catch this pod with label selectors
      - equal:
          path: spec.selector.matchLabels["app.kubernetes.io/name"]
          value: "rsyncd"
      - equal:
          path: spec.selector.matchLabels["app.kubernetes.io/instance"]
          value: "RELEASE-NAME"
      # No security contexts by default
      - notExists:
          path: spec.template.spec.securityContext
      - notExists:
          path: spec.template.spec.containers[0].securityContext
      # No node selector by default
      - notExists:
          path: spec.template.spec.nodeSelector
      # No affinity by default
      - notExists:
          path: spec.template.spec.affinity
      # No tolerations by default
      - notExists:
          path: spec.template.spec.tolerations
      # Default exposed port is 1873
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: rsyncd
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 1873
      # Health Probes
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.exec.command[0]
          value: pgrep
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.exec.command[1]
          value: rsync
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 5
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.periodSeconds
          value: 5
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.exec.command[2]
          value: test -f /home/rsyncd/run/rsyncd.pid
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 5
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.periodSeconds
          value: 5
      # Environment variables with default setup
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: RSYNCD_DAEMON
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: rsyncd
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: RSYNCD_PORT
      - equal:
          path: spec.template.spec.containers[0].env[1].value
          value: "1873"
      - notExists:
          path: spec.template.spec.containers[0].env[2]
      # No container resources by default
      - notExists:
          path: spec.template.spec.containers[0].resources
      # Custom rsyncd.inc configuration overlay is mounted from the rsyncd-conf configmap
      - equal:
          path: spec.template.spec.volumes[1].name
          value: rsyncd-conf
      - equal:
          path: spec.template.spec.volumes[1].configMap.name
          value: RELEASE-NAME-rsyncd-conf
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].name
          value: rsyncd-conf
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].subPath
          value: rsyncd.inc
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].mountPath
          value:  /home/rsyncd/etc/rsyncd.d/rsyncd.inc
      # TempFS volume by default
      -  equal:
          path: spec.template.spec.volumes[0].name
          value: ramfs
      -  equal:
          path: spec.template.spec.volumes[0].emptyDir.medium
          value: Memory
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: ramfs
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /tmp
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].subPath
          value: tmp
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].name
          value: ramfs
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].mountPath
          value: /home/rsyncd/run
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].subPath
          value: run
      # No Rsyncd component by default
      - notExists:
          path: spec.template.spec.containers[0].volumeMounts[4]
      - notExists:
          path: spec.template.spec.volumes[2]
      - notExists:
          path: spec.template.spec.containers[0].volumeMounts[5]
      - notExists:
          path: spec.template.spec.volumes[3]
      # No custom entrypoint/command by default
      - notExists:
          path: spec.template.spec.containers[0].command
      - notExists:
          path: spec.template.spec.containers[0].args
  - it: should create a default rsyncd-conf config map
    template: configmap.rsyncd-conf.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: RELEASE-NAME-rsyncd-conf
      - notExists:
          path: data["jenkins.conf"]
  - it: should create the default service
    template: service.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: metadata.name
          value: RELEASE-NAME-rsyncd
      # Internal service by default
      - equal:
          path: spec.type
          value: ClusterIP
      - notExists:
          path: spec.loadBalancerIP
      - notExists:
          path: spec.loadBalancerSourceRanges
      # Default published port is 873 by default
      - equal:
          path: spec.ports[0].port
          value: 873
      # Default exposed (pod) port is 1873 by default
      - equal:
          path: spec.ports[0].targetPort
          value: 1873
      # Check the expected label selectors to allow Service to catch the pods
      - equal:
          path: spec.selector["app.kubernetes.io/name"]
          value: "rsyncd"
      - equal:
          path: spec.selector["app.kubernetes.io/instance"]
          value: "RELEASE-NAME"
      - notExists:
          path: metadata.annotations
  - it: should not define any Secret
    template: secrets.yaml
    asserts:
      - hasDocuments:
          count: 0

suite: Tests with custom values
templates:
  - deployment.yaml
  - ingress.yaml
  - secrets.yaml
  - service.yaml
  - pdb.yaml
  - persistentVolume.yaml
  - persistentVolumeClaim.yaml
values:
  - values/custom.yaml
tests:
  - it: Should set the correct service selector labels when a fullNameOverride is specified
    template: service.yaml
    set:
      fullNameOverride: "my-fullNameOverride"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.selector["app.kubernetes.io/name"]
          value: "mirrorbits"
      - equal:
          path: spec.selector["app.kubernetes.io/instance"]
          value: "RELEASE-NAME"
  - it: should define a customized "mirrorbits" deployment
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[*].imagePullPolicy
          value: Always
      - equal:
          path: spec.replicas
          value: 2
      # Custom GeoIP mountpath
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].mountPath
          value: /geo-data
      # Log volumes is a custom PVC in a custom mount path
      - equal:
          path: spec.template.spec.volumes[2].name
          value: logs
      - equal:
          path: spec.template.spec.volumes[2].persistentVolumeClaim.claimName
          value: foobar
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].name
          value: logs
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].mountPath
          value: /custom
      # Data Volume
      - equal:
          path: spec.template.spec.volumes[3].name
          value: data
      - equal:
          path: spec.template.spec.volumes[3].persistentVolumeClaim.claimName
          value: mirrorbits-binary
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[3].name
          value: data
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[3].mountPath
          value: /DATA
  - it: should create ingress with pathType set to the specified custom value by default
    template: ingress.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "IfNotPresent"
  - it: should define a customized "mirrorbits" persistent volume
    template: persistentVolume.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PersistentVolume
  - it: should define a customized "mirrorbits" PV claim
    template: persistentVolumeClaim.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PersistentVolumeClaim
  - it: create a default pdb when replicated
    template: pdb.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 1
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: mirrorbits
  - it: create a customized pdb when custom values are set
    template: pdb.yaml
    set:
      poddisruptionbudget:
        minAvailable: 2
        maxUnavailable: 3
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: mirrorbits
  - it: should create all secrets
    template: secrets.yaml
    asserts:
      - hasDocuments:
          count: 3
      - documentIndex: 0
        isKind:
          of: Secret
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-mirrorbits-geoipupdate
      - documentIndex: 1
        isKind:
          of: Secret
      - documentIndex: 1
        equal:
          path: metadata.name
          value: RELEASE-NAME-mirrorbits-binary
      - documentIndex: 2
        equal:
          path: metadata.name
          value: RELEASE-NAME-mirrorbits-config
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'Repository: /DATA'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'Templates: /custom-tpls'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'GeoipDatabasePath: /geo-data'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'Gzip: false'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'ListenAddress: :7777'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'LogDir: /custom'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'Fallbacks'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'RedisAddress: redis-master.internal.company.org:6379'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'RedisPassword: SuperSecretRedisPassword'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'RedisDB: 4'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'Fallbacks:'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: '- URL: https://fallback.company.org'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'CountryCode: DE'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'ContinentCode: EU'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'DisallowRedirects: false'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'DisableOnMissingFile: false'
          decodeBase64: true
      - documentIndex: 2
        matchRegex:
          path: data["mirrorbits.conf"]
          pattern: 'TraceFileLocation: /TIME'
          decodeBase64: true
  - it: should create a custom service
    template: service.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: metadata.name
          value: RELEASE-NAME-mirrorbits
      - equal:
          path: spec.type
          value: LoadBalancer
      - equal:
          path: spec.ports[0].name
          value: http
      - equal:
          path: spec.ports[0].port
          value: 443
      - equal:
          path: spec.ports[0].targetPort
          value: 7777
